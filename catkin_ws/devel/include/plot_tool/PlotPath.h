// Generated by gencpp from file plot_tool/PlotPath.msg
// DO NOT EDIT!


#ifndef PLOT_TOOL_MESSAGE_PLOTPATH_H
#define PLOT_TOOL_MESSAGE_PLOTPATH_H

#include <ros/service_traits.h>


#include <plot_tool/PlotPathRequest.h>
#include <plot_tool/PlotPathResponse.h>


namespace plot_tool
{

struct PlotPath
{

typedef PlotPathRequest Request;
typedef PlotPathResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PlotPath
} // namespace plot_tool


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::plot_tool::PlotPath > {
  static const char* value()
  {
    return "11f01eca6b922e1051e9a725443a07ad";
  }

  static const char* value(const ::plot_tool::PlotPath&) { return value(); }
};

template<>
struct DataType< ::plot_tool::PlotPath > {
  static const char* value()
  {
    return "plot_tool/PlotPath";
  }

  static const char* value(const ::plot_tool::PlotPath&) { return value(); }
};


// service_traits::MD5Sum< ::plot_tool::PlotPathRequest> should match
// service_traits::MD5Sum< ::plot_tool::PlotPath >
template<>
struct MD5Sum< ::plot_tool::PlotPathRequest>
{
  static const char* value()
  {
    return MD5Sum< ::plot_tool::PlotPath >::value();
  }
  static const char* value(const ::plot_tool::PlotPathRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::plot_tool::PlotPathRequest> should match
// service_traits::DataType< ::plot_tool::PlotPath >
template<>
struct DataType< ::plot_tool::PlotPathRequest>
{
  static const char* value()
  {
    return DataType< ::plot_tool::PlotPath >::value();
  }
  static const char* value(const ::plot_tool::PlotPathRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::plot_tool::PlotPathResponse> should match
// service_traits::MD5Sum< ::plot_tool::PlotPath >
template<>
struct MD5Sum< ::plot_tool::PlotPathResponse>
{
  static const char* value()
  {
    return MD5Sum< ::plot_tool::PlotPath >::value();
  }
  static const char* value(const ::plot_tool::PlotPathResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::plot_tool::PlotPathResponse> should match
// service_traits::DataType< ::plot_tool::PlotPath >
template<>
struct DataType< ::plot_tool::PlotPathResponse>
{
  static const char* value()
  {
    return DataType< ::plot_tool::PlotPath >::value();
  }
  static const char* value(const ::plot_tool::PlotPathResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLOT_TOOL_MESSAGE_PLOTPATH_H
